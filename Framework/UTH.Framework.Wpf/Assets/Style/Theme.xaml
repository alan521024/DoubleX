<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:UTH.Framework.Wpf"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:culture="clr-namespace:UTH.Infrastructure.Resource.Culture;assembly=UTH.Infrastructure.Resource"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"

                    mc:Ignorable="options">

    <!--size-->
    <System:Double x:Key="ButtonDefaultSize">86</System:Double>

    <!--head title-->
    <SolidColorBrush x:Key="WindowTitleColorBrush" Color="{StaticResource AccentColor}" options:Freeze="True" />

    <!--command-->
    <Style TargetType="{x:Type controls:WindowCommands}">
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>
    <Style TargetType="{x:Type controls:WindowCommandsItem}">
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>
    <Style TargetType="{x:Type controls:WindowButtonCommands}">
        <Setter Property="Margin" Value="0,0,15,0"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
    </Style>

    <!--window-->
    <!--<Style TargetType="{x:Type controls:MetroWindow}">
        <Setter Property="TitlebarHeight" Value="32"></Setter>
    </Style>-->

    <!--button-->
    <Style x:Key="UTH.DefaultButton" BasedOn="{StaticResource MetroButton}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Height" Value="35"></Setter>
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource IdealForegroundColorBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="controls:ControlsHelper.CornerRadius" Value="2" />
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="FontSize" Value="{DynamicResource UpperCaseContentFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.CornerRadius), Mode=OneWay}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <controls:ContentControlEx x:Name="PART_ContentPresenter"
                                                   Margin="{TemplateBinding BorderThickness}"
                                                   Padding="{TemplateBinding Padding}"
                                                   HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                   Content="{TemplateBinding Content}"
                                                   ContentCharacterCasing="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(controls:ControlsHelper.ContentCharacterCasing)}"
                                                   ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                   ContentTemplate="{TemplateBinding ContentTemplate}"
                                                   ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                   RecognizesAccessKey="True"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush8}" />
                            <Setter Property="Foreground" Value="{DynamicResource BlackBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource GrayBrush7}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ButtonMouseOverBorderBrush}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.7" />
                            <Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style BasedOn="{StaticResource UTH.DefaultButton}" TargetType="Button" />

    <!--textbox-->
    <Style x:Key="UTH.DefaultTextBox"  BasedOn="{StaticResource MetroTextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style BasedOn="{StaticResource UTH.DefaultTextBox}" TargetType="TextBox" />

    <!--ext togglebutton-->
    <Style TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource AccentColorBrush}"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource WhiteBrush}"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
    </Style>

    <!--ext passwordbox -->
    <Style x:Key="UTH.DefaultPasswordBox"  BasedOn="{StaticResource MetroPasswordBox}" TargetType="{x:Type PasswordBox}">
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>
    <Style BasedOn="{StaticResource UTH.DefaultPasswordBox}" TargetType="PasswordBox" />

    <!--ext groupbutton-->
    <Style x:Key="UTH.GroupButton" BasedOn="{StaticResource UTH.DefaultButton}"  TargetType="{x:Type ButtonBase}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="30" />
        <Setter Property="controls:ControlsHelper.CornerRadius" Value="0" />
    </Style>

    <!--ext grouptext-->
    <Style x:Key="UTH.GroupTextBox" BasedOn="{StaticResource UTH.DefaultTextBox}"  TargetType="{x:Type TextBox}">
        <Setter Property="Height" Value="30" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!--splitter-->
    <Style x:Key="UTH.Splitter.PreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UTH.Splitter.Button" TargetType="{x:Type Button}">

    </Style>
    <Style x:Key="UTH.Splitter" TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="PreviewStyle" Value="{StaticResource UTH.Splitter.PreviewStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Button Name="uthSplitterButton" Content=":" VerticalAlignment="Center" Height="50" Panel.ZIndex="0" Cursor="Hand" Padding="0"></Button>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--pager-->
    <Style TargetType="{x:Type local:Pager}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Pager}">
                    <TextBlock Text="{Binding Current}" Foreground="Red" Background="Green" Width="100"></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>