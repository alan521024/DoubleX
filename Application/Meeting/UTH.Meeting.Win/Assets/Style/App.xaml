<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:culture="clr-namespace:UTH.Infrastructure.Resource.Culture;assembly=UTH.Infrastructure.Resource"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:local="clr-namespace:UTH.Meeting.Win"
                    mc:Ignorable="options">

    <!-- form line margin -->
    <Style x:Key="FormTopMargin" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="35,15,35,0"></Setter>
    </Style>
    <Style x:Key="FormLineMargin" TargetType="{x:Type ContentControl}">
        <Setter Property="Margin" Value="35,15,35,0"></Setter>
    </Style>

    <!-- setting nav -->
    <Style x:Key="settingNav" TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <Style x:Key="settingNavItem" TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="5,5,5,0" />
        <Setter Property="Padding" Value="10,5,10,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border x:Name="_settingNavItemBD" Margin="{TemplateBinding Margin}"  Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Text="{TemplateBinding Content}"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground"  Value="White"></Setter>
                            <Setter Property="Background"  Value="#CC119EDA"></Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground"  Value="White"></Setter>
                            <Setter Property="Background" Value="#CC119EDA"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--form-->
    <Style x:Key="formTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="Width" Value="76"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Left"></Setter>
        <Setter Property="Margin" Value="0,0,10,0"></Setter>
        <Setter Property="Margin" Value="0,0,10,0"></Setter>
    </Style>
    <Style x:Key="formTitleMin" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource formTitle}">
        <Setter Property="Width" Value="50"></Setter>
    </Style>

    <!--search-->
    <Style x:Key="searchTitle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="Margin" Value="10,15,0,15"></Setter>
    </Style>
    <Style x:Key="searchTxt" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Margin" Value="0"></Setter>
    </Style>
    <Style x:Key="searchTextbox" TargetType="{x:Type TextBox}">
        <Setter Property="MinWidth" Value="160"></Setter>
        <Setter Property="Height" Value="28"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Margin" Value="10,0,10,0"></Setter>
    </Style>
    <Style x:Key="searchButton" BasedOn="{StaticResource UTHDefaultButton}"  TargetType="{x:Type Button}">
        <Setter Property="Width" Value="60"></Setter>
        <Setter Property="Height" Value="28"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
    </Style>

    <!-- style label title & descript -->
    <Style x:Key="tbTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource HeaderFontFamily}"></Setter>
        <Setter Property="FontWeight" Value="500"></Setter>
        <Setter Property="FontSize" Value="24"></Setter>
    </Style>
    <Style x:Key="tbDes" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource ContentFontFamily}"></Setter>
        <Setter Property="FontSize" Value="14"></Setter>
        <Setter Property="LineHeight" Value="24"></Setter>
        <Setter Property="TextWrapping" Value="Wrap"></Setter>
    </Style>

    <!-- record -->
    <Style x:Key="lbiSourceRecord" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Margin" Value="20,15,15,0" />
        <Setter Property="Foreground" Value="#FF46679A" />
        <Setter Property="Background" Value="White" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="border" CornerRadius="0" Margin="0" BorderBrush="Black" BorderThickness="0,0,0,0.5">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="BorderBrush" Value="#FF46679A" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="lbiTargetRecord" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Margin" Value="0,5,0,5" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="border" CornerRadius="0" Margin="0" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="#FF46679A" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type local:RecordObservable}">
        <Grid Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Margin="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Tag}" Margin="0,0,10,0"></TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="：" Margin="0,0,10,0"></TextBlock>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Content}" TextWrapping="Wrap"></TextBlock>
            </Grid>
            <ListBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding Translations}"  ItemContainerStyle="{DynamicResource lbiTargetRecord}"  ScrollViewer.HorizontalScrollBarVisibility="Disabled"></ListBox>
        </Grid>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:TranslationObservable}">
        <Grid Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Tag}" Margin="0,0,10,0"></TextBlock>
            <TextBlock Grid.Row="0" Grid.Column="1" Text="：" Margin="0,0,10,0"></TextBlock>
            <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Content}"  TextWrapping="Wrap"></TextBlock>
        </Grid>
    </DataTemplate>

    <Style x:Key="lbTargetSelectContainerStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="itemBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="itemBorder" Value="Transparent" />
                            <Setter Property="BorderThickness" TargetName="itemBorder" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="itemBorder" Value="Transparent" />
                            <Setter Property="BorderThickness" TargetName="itemBorder" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="itemBorder" Value="Transparent" />
                            <Setter Property="BorderThickness" TargetName="itemBorder" Value="0"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="itemBorder" Value="Transparent" />
                            <Setter Property="BorderThickness" TargetName="itemBorder" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--pager2-->
    <Style x:Key="pagerView" TargetType="{x:Type ListView}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    </Style>
    <Style x:Key="pagerViewItem" TargetType="{x:Type ListViewItem}" BasedOn="{x:Null}">
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Background" Value="#fff"></Setter>
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Border" BorderThickness="0" Margin="0" Padding="0">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="pagerItem" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="Height" Value="28"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type local:Pager2}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Pager2}">
                    <StackPanel Orientation="Horizontal" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type TextBlock}">
                                <Setter Property="Margin" Value="2"></Setter>
                                <Setter Property="Padding" Value="5"></Setter>
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                            </Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Setter Property="Width" Value="35"></Setter>
                                <Setter Property="Height" Value="28"></Setter>
                                <Setter Property="Margin" Value="2"></Setter>
                                <Setter Property="Padding" Value="0"></Setter>
                                <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                                <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
                            </Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource UTHDefaultButton}">
                                <Setter Property="Height" Value="28"></Setter>
                                <Setter Property="Margin" Value="2"></Setter>
                                <Setter Property="Padding" Value="5"></Setter>
                                <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
                                <Setter Property="VerticalAlignment" Value="Center"></Setter>
                            </Style>
                        </StackPanel.Resources>
                        <Button Content="首页" Command="{x:Static local:Pager2.FirstCommand}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsFirst,  UpdateSourceTrigger=PropertyChanged}"></Button>
                        <Button Content="上一页"  Command="{x:Static local:Pager2.PrevCommand}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsFirst,  UpdateSourceTrigger=PropertyChanged}"></Button>
                        <ListView Style="{StaticResource pagerView}"  ItemContainerStyle="{StaticResource pagerViewItem}" ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageItems,Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <WrapPanel>
                                        <Button DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Key}" Content="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Key}" Command="{x:Static local:Pager2.SelectCommand}" Style="{StaticResource pagerItem}" IsEnabled="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Value}"></Button>
                                    </WrapPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                        <Button Content="下一页"  Command="{x:Static local:Pager2.NextCommand}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsLast,  UpdateSourceTrigger=PropertyChanged}"></Button>
                        <Button Content="尾页"  Command="{x:Static local:Pager2.LastCommand}" IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsLast,  UpdateSourceTrigger=PropertyChanged}"></Button>
                        <TextBlock Text="第" />
                        <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageIndex,Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{x:Static local:Pager2.GotoCommand}" Key="Enter"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <TextBlock Text="/" Margin="0" MinWidth="1" />
                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageTotal}"  />
                        <TextBlock Text="页" />
                        <TextBlock Text="每页" />
                        <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PageSize,Mode=TwoWay,  UpdateSourceTrigger=PropertyChanged}">
                            <TextBox.InputBindings>
                                <KeyBinding Command="{x:Static local:Pager2.SizeCommand}" Key="Enter"/>
                            </TextBox.InputBindings>
                        </TextBox>
                        <TextBlock Text="条" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--crumbs-->
    <Style x:Key="CrumbsView" TargetType="{x:Type ListView}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"></Setter>
    </Style>
    <Style x:Key="CrumbsViewItem" TargetType="{x:Type ListViewItem}" BasedOn="{x:Null}">
        <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Border" BorderThickness="0" Margin="0" Padding="0">
                        <ContentPresenter VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CrumbsLink" TargetType="{x:Type Hyperlink}">
        <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red"></Setter>
                <Setter Property="TextBlock.TextDecorations">
                    <Setter.Value>
                        <TextDecorationCollection>
                            <TextDecoration Location="Underline"/>
                        </TextDecorationCollection>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="CrumbsText" TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,15,5,15"></Setter>
    </Style>

    <Style TargetType="{x:Type local:Crumbs}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:Crumbs}">
                    <ListView Style="{DynamicResource CrumbsView}" ItemContainerStyle="{DynamicResource CrumbsViewItem}"
                              Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                              ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Items,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal" IsItemsHost="True"/>
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Style="{DynamicResource CrumbsText}">
                                    <Hyperlink NavigateUri="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Url}" ToolTip="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Tip}" Command="{x:Static local:Crumbs.SelectCommand}" Style="{DynamicResource CrumbsLink}">
                                        <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Text}"></TextBlock>
                                    </Hyperlink>
                                    <TextBlock Margin="2,0,0,0" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Split}"></TextBlock>
                                </TextBlock>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>